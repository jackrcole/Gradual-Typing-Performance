=== tests/cases/compiler/getterSetterNonAccessor.ts ===
function getFunc():any{return 0;}
>getFunc : () => any

function setFunc(v){}          
>setFunc : (v: any) => void
>v : any

Object.defineProperty({}, "0", <PropertyDescriptor>({
>Object.defineProperty({}, "0", <PropertyDescriptor>({          get: getFunc,          set: setFunc,          configurable: true      })) : any
>Object.defineProperty : (o: any, p: string, attributes: PropertyDescriptor) => any
>Object : ObjectConstructor
>defineProperty : (o: any, p: string, attributes: PropertyDescriptor) => any
>{} : {}
><PropertyDescriptor>({          get: getFunc,          set: setFunc,          configurable: true      }) : PropertyDescriptor
>PropertyDescriptor : PropertyDescriptor
>({          get: getFunc,          set: setFunc,          configurable: true      }) : { get: () => any; set: (v: any) => void; configurable: boolean; }
>{          get: getFunc,          set: setFunc,          configurable: true      } : { get: () => any; set: (v: any) => void; configurable: boolean; }

          get: getFunc,
>get : () => any
>getFunc : () => any

          set: setFunc,
>set : (v: any) => void
>setFunc : (v: any) => void

          configurable: true
>configurable : boolean

      }));

